<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>To-do List</title>
      <link href="/2021/08/20/To-do-List/"/>
      <url>/2021/08/20/To-do-List/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2021.8 模拟赛总结</title>
      <link href="/2021/08/18/2021-8-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%80%BB%E7%BB%93/"/>
      <url>/2021/08/18/2021-8-%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="8-25"><a href="#8-25" class="headerlink" title="8.25"></a>8.25</h3><p>有史以来感觉距离 AK 最近的一次。考场上便想出了四道题的正确思路。</p><h4 id="A"><a href="#A" class="headerlink" title="A"></a>A</h4><p>数据范围到了 $2 \times 10^7$，说明必须用严格 O(n) 的做法才能通过本题。因为不保证模数是质数，所以不能使用前缀积。<br>正解考虑将原序列分块，块长为 $k$，维护块内前缀后缀积，最后 O(1) 查询每个区间的积即可。<br>注意本题空间限制 256MB，所以应使用 <code>int</code> 数组统计答案，取模时强制转换成 <code>long long</code> 即可。  </p><h4 id="B"><a href="#B" class="headerlink" title="B"></a>B</h4><p>逆康托展开模板题，需要套高精，最后一个测试点需要特判以缩小计算的数据范围。  </p><h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><p>题目要求求出使 $\dfrac{N - \frac{1}{2}T}{N - T} (0 &lt; T &lt; N)$ 为整数的所有 $T$。<br>设 $N - \dfrac{1}{2}T = k(N-T)$，则 $(2k - 2)N = (2k - 1)T$。<br>移项得 $T = \dfrac{2k - 2}{2k - 1}N$，且满足 $T$ 为整数。<br>枚举 $N$ 的所有除 $1$ 外的奇数约数即可。 </p><h4 id="D"><a href="#D" class="headerlink" title="D"></a>D</h4><p>首先将优惠后的图建出来。<br>然后两次二分 spfa 判连通性，第一次二分查找使 <code>s</code> 和 <code>t</code> 联通的最大左边界，第二次二分查找在满足第一次已找出的左边界前提下使 <code>s</code> 和 <code>t</code> 联通的最小右边界。  </p><h3 id="8-26"><a href="#8-26" class="headerlink" title="8.26"></a>8.26</h3><h4 id="A-1"><a href="#A-1" class="headerlink" title="A"></a>A</h4><p>结论题，取坐标是所有横纵坐标的中位数（$n$ 为偶数时取靠左、靠上的点）统计答案即可。因为计算曼哈顿距离，所以横纵坐标独立，而上述结论在一维下显然成立。  </p><h4 id="B-1"><a href="#B-1" class="headerlink" title="B"></a>B</h4><p>换根 dp，考虑每次换根操作实质上只有连接原节点和新节点的边对整体的贡献改变。首先预处理出以 $1$ 为根时各点的子树大小及其贡献，然后按照 dfs 序换根，换根时只需改变一条边的贡献，统计完成后回溯即可。注意更新答案时考虑字典序的问题。  </p><h4 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h4><p>题意：一棵树开始都是白点，支持将任意一个点反色，每次查询对于任意一个节点，和所有黑点分别求 LCA 时最深的 LCA。<br>结论：每次查询只需要查询在 dfs 序中该节点和其直接前驱后继，比较深度即可。（证明咕了，可以感性理解）<br>用 set 维护 dfs 序中黑点的加入和删除。  </p><h4 id="D-1"><a href="#D-1" class="headerlink" title="D"></a>D</h4><p>用并查集维护每一组限制，考虑将 a, b 分别暴力与其 LCA 合并，即 a, b 到其 LCA 的路径方向一定相同。 若 a, b 不在一条链上则 a -&gt; LCA 与 b -&gt; LCA 的路径方向一定不同，将 a, b 分别与其补集合并。最后统计（原集 + 补集）连通块的个数，若一个点的原集与其补集在同一集合中，则说明矛盾，输出 <code>0</code>。否则将所有连通块个数 / 2，用快速幂计算 $2^{连通块个数 / 2}$ 即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Summary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见错误总结</title>
      <link href="/2021/08/13/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/"/>
      <url>/2021/08/13/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>持续更新中~</p><h4 id="0-文件输入-输出"><a href="#0-文件输入-输出" class="headerlink" title="0. 文件输入/输出"></a>0. 文件输入/输出</h4><ul><li>大型考试中，严格加 <code>freopen</code>，同时注意要将输入输出的文件名写对，一定记得删掉测大样例时输入的文件名后缀。</li><li>校内OJ模拟赛时，测完大样例记得删掉 <code>freopen</code>，或在文件前后使用 <code>#ifndef ONLINE_JUDGE</code>。洛谷也不支持文件I/O。</li><li>loj上明确写有＂文件I/O＂的要加文件输入输出。</li></ul><h4 id="1-死循环-不出结果"><a href="#1-死循环-不出结果" class="headerlink" title="1. 死循环/不出结果"></a>1. 死循环/不出结果</h4><ul><li>快读写错。</li><li><code>scanf</code> 忘写取址符 <code>&amp;</code>。  </li><li>多测未赋初值/未清空导致死循环（尤其注意 <code>head</code>、<code>tag</code> 等数组是否清空）。</li><li>在一棵 1 ~ n - 1 的树上深搜到 0 号节点导致死循环。  </li><li>深搜某些条件没有 <code>return</code> 导致死循环。  </li><li>循环条件写错如：<code>for(int j = 1; j &lt;= i; ++i)</code> 之类。  </li><li>网络流 <code>dis</code> 初始化没有使用 <code>memset</code> 导致没有将全部节点的初始 <code>dis</code> 设置为 <code>INF</code>。</li></ul><h4 id="2-WA"><a href="#2-WA" class="headerlink" title="2. WA"></a>2. WA</h4><ul><li>没有注意数据范围，该开 <code>long long</code> 要开。  </li><li>线段树 <code>pushdown</code> 写挂。  </li><li>取模取挂（注：<code>long long</code> 关于 <code>int</code> 取模，要先模模数再进行计算，同时随时取模，否则会爆 <code>long long</code>）。  </li><li>如果一直输出 <code>0</code>，检查：<ul><li>快读是不是 <code>return</code> 了读入的数。  <ul><li>是否少读入了某些数。  </li><li>结果为连乘积的时候，<code>ans</code> 的初值是否为 <code>1</code>。  </li></ul></li></ul></li><li>试图 <code>1 &lt;&lt; 32</code> 或 <code>1ll &lt;&lt; 63</code>。  </li><li>位运算未注意优先级。  </li><li>组合数运算时将 <code>fac[n]</code> 写成 <code>n</code>。  </li><li>背包未继承上一层的值导致错误（<code>f[i][j] = f[i - 1][j]</code>）。</li><li>BST 查找右子树排名 <code>k</code> 时减去左子树的 <code>siz</code> 后没有 +1。  </li><li>网络流初始时 <code>cnt</code> 未赋为 <code>1</code>。</li><li>没有删调试语句。</li></ul><h4 id="3-RE"><a href="#3-RE" class="headerlink" title="3. RE"></a>3. RE</h4><ul><li>数组访问越界。</li><li>线段树处理不好的话需要开 $8$ 倍空间。  </li><li>洛谷日爆。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSP-S/J 2020 游记</title>
      <link href="/2021/08/13/Test/"/>
      <url>/2021/08/13/Test/</url>
      
        <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>这次算是熟悉OI后，第一次参加的正式比赛。虽然去年也参加了CSP-J 2019，但毕竟在当时没有什么经验，甚至不知道怎么用 Windows 系统答题。这次，我的经验比以前丰富了不少，也从中收获了宝贵的大赛体验。</p><h3 id="Day-28"><a href="#Day-28" class="headerlink" title="Day -28"></a>Day -28</h3><p>一阶段考试。考的还可以，但还是没有发挥到最好。</p><h3 id="Day-26"><a href="#Day-26" class="headerlink" title="Day -26"></a>Day -26</h3><p>初赛。md一阶段周五周六考，然后 CSP-J1/S1 周日考？  </p><p>上午 S 组，本着能拿多少分就拿多少的心态去考的，不会的就分析选项，再不会就选 C =_= 交卷前，算算自己会的大概有 $60$，还算稳。HE 的分数线向来不高，记得去年是 $50$ 分……  </p><p>下午 J 组，发挥的一般，还不如去年，原题都做错，自闭了。  </p><h3 id="Day-21"><a href="#Day-21" class="headerlink" title="Day -21"></a>Day -21</h3><p>初赛出成绩，S 组 $81$，J 组 $86.5$。<br>HE 分数线，J/S 都是 $49$ 分。</p><h3 id="Day"><a href="#Day" class="headerlink" title="Day -?"></a>Day -?</h3><p>年级公布学科竞赛时间，正好在 CSP 前一天， <del>不考了不考了，还得去考 CSP 呢</del></p><h3 id="Day-1"><a href="#Day-1" class="headerlink" title="Day -1"></a>Day -1</h3><p>一阶段表彰，年级 Rk $16$。</p><h3 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h3><p>上午还在学校上课。  </p><p>下午坐高铁来到了秦皇岛燕山大学，学校宾馆安静、环境好、条件好，好评。  </p><p>晚上在你谷打了几个板子，又T又WA，索性不打了。<br><del>比赛目标：不爆零</del></p><h3 id="Day-1-1"><a href="#Day-1-1" class="headerlink" title="Day 1"></a>Day 1</h3><p><del>关于 Day 2，它 NOIP 了</del><br>总共就一天，上午 J 组，下午 S 组。 </p><p>$7:30$ 上车，想着 J 组不慌，当练手了。考前很淡定（其实并不该这么淡定）。<br>$8:30$ 准时发卷。密码“他 山 之 石”。<br>吸取以往模拟赛和洛谷月赛的经验教训，先把所有题都读了一遍。发现 T1 是水题，T2 跟去年类似，是个模拟，T3 跟后缀表达式有关，像个神仙题，T4 显然 DP。<br>$8:40$ 把文件夹都建好，开始答 T1。简单地二进制拆一下就行，把给出的 $n$ 中每一位是 $1$ 的标记出来，从大到小输出即可。<br>$8:50$ 过了 T1 大样例，又自己手动模拟了几组数据，觉得没什么问题，转 T2。数据范围 $n \le 10^5$，突然想到去年 transfer 惨案，于是果断想 $O(n\log n)$ 的算法。发现可以开两个优先队列，一个存所有目前在分数线上的，一个存线下的。后来发现如果一群分数相同的一直在两个堆里倒来倒去，那还不如不开……然后猛然想到可以桶排，那样队列里只用存几个不同的分数就行了。每次输出时输出堆顶元素即可。1h 过了大样例，感觉还可以，开 T3。<br>T3 好不容易看懂了，发现不会，打了 $O(n^2)$ 暴力爬了。<br>T4 知道是 DP，直接爆搜，骗 $20$ 分走人。<br>不知道哪里浪费了那么多的时间，这时只剩下 30 min，回到 T3，发现前 $20\%$ 的数据简直是白给。快速地把那 $20$ 分骗到手，返回检查 T2，写了个 generator，发现极限数据能跑过，心里稳了不少。<br>然后就基本到点了，检查了下文件，正好 $11:58$。<br>出场，发现 T2 可以直接 $O(600n)$ 暴力扫一遍，那我还写啥优先队列啊/fad<br>估分：$100 + 100 + 50 + 20 = 270$<br>洛谷：$100 + 100 + 50 + 20 = 270$<br>信奥题库：$100 + 100 + 50 + 20 = 270$  </p><p>下午考 S 组。第一次考 S 组，心里还是有点慌。<br>$14:00$ 进考场，干等了半个小时。<br>$14:30$ 发卷，结果密码错误。以为自己眼花，重新输了一遍，结果还不对。这个时候发现整个考场都输不对密码，有人便问监考老师。把“k”改成了大写，还是不对，监考过了整整一分钟才发现还有一对括号（）<br>下午密码：可 以 攻 玉<br>开题。发现 T1 的出题人危，T2、3、4 都看不太懂。<br>咬定 T1 大模拟拿时间就可以换分，开始硬刚 T1。心想反正 T3、T4 也不会，前面能拿多少拿多少吧。<br>采用分段的思想，先考虑公元前的情况，再写 1-1-1 到 1582-10-4 的情况，最后再想 1582-10-15 之后的情况。每种情况都很复杂……尤其是 debug 的时候，简直不能更酸爽……那个 $1721442 (4713\times365+1197)$ 和 $2299160 (1721442+1581\times365+395+277)$ 附近的数不知被我敲了多少遍。<br>2h，终于过了大样例。开始转战 T2。<br>发现 T2 题面恶心，有好多没用的东西，其实还是挺水的（考场上思路很混乱，想复杂了，所幸乱搞没挂）。晚上回酒店刷你谷讨论区才发现没特判 $n=0$，$k=64$ 的情况。 <del>话说这谁想得到啊</del><br>T3 题面太长，先跳了。看 T4，发现是个神仙思维题，有 $20$ 分 $n=3$ 好评。写了 $20$，也发现不了 T4 更多的性质，就扔了。<br>回来看 T3，发现最裸的暴力都打不出来。敲了 40 min，发现调不过样例。这时候只剩 10 min 了，就弃掉了 T3，返回去检查文件。<br>就这样考完了。<br>果不其然，考完后大家向 T1 出题人致以了诚挚的问候（（<br>发现过了 T1 的竟然不多？可能大佬都没把时间浪费在 T1 上吧……<br>估分：$100 + ? + 0 + 20 = 120+?$<br>luogu：$100 + 95 + 0 + 10 =205$<br>话说 T4 怎么挂了 $10$ 分啊喂<br>漫长的一天，就这样考完了。<br>如果 HE 分数线低，我貌似还能拿 S 组 1=？<br>我难道能有蓝勾了？/se</p><h3 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h3><p>回到sjz。  </p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这次算是超常发挥，或是说幸运。S 组考了一道大模拟，正好让我可以用考场上的时间堆出一个对我来说不错的分数。同时，上下午都没怎么涉及图论与数据结构，也没有恶心的字符串，可以说那些以往常考的、我不会的，这次好多都没考。还有，不挂分其实是这一切的核心。比如 S 组 T1 满分，其实给了我很大的优势。但 J/S 组 3/4 题都完全不会正解，可见总体的算法水平还远低于同年级的，更不用说高年级的，大佬们。<br>同时，这也是我初中生涯中最后一次 CSP 了，明年，我将成为正式的高中选手，希望到时候能够有质的飞跃，甚至于进入 NOI，都将从不可能变为可能。<br>而我，也将不断努力， <del>不断加强whk</del>，在自己在 OI 上开辟的道路中，坚强的前行。</p><h3 id="Upd"><a href="#Upd" class="headerlink" title="Upd:"></a>Upd:</h3><p>CSP-J: $100+100+50+20=270$<br>CSP-S: $100+85+10+20=215$，HE Rk $15$</p><p><strong>—END—</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Travel Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/13/hello-world/"/>
      <url>/2021/08/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>Failed Uploads: 6</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
